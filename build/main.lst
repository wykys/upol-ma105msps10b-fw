ARM GAS  /tmp/ccTqgYEn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemClock_Config,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	SystemClock_Config:
  27              	.LFB142:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccTqgYEn.s 			page 2


  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccTqgYEn.s 			page 3


  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Infinite loop */
  94:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  95:Core/Src/main.c ****   while (1)
  96:Core/Src/main.c ****   {
  97:Core/Src/main.c ****     /* USER CODE END WHILE */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c ****   /* USER CODE END 3 */
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****   * @brief System Clock Configuration
 106:Core/Src/main.c ****   * @retval None
 107:Core/Src/main.c ****   */
 108:Core/Src/main.c **** void SystemClock_Config(void)
 109:Core/Src/main.c **** {
  29              		.loc 1 109 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 112
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 110:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  33              		.loc 1 110 3 view .LVU1
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 109 1 is_stmt 0 view .LVU2
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 9DB0     		sub	sp, sp, #116
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 136
  46              		.loc 1 110 22 view .LVU3
  47 0004 4C22     		movs	r2, #76
  48 0006 0021     		movs	r1, #0
  49 0008 09A8     		add	r0, sp, #36
  50 000a FFF7FEFF 		bl	memset
  51              	.LVL0:
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  52              		.loc 1 111 3 is_stmt 1 view .LVU4
  53              		.loc 1 111 22 is_stmt 0 view .LVU5
  54 000e 2022     		movs	r2, #32
  55 0010 0021     		movs	r1, #0
  56 0012 01A8     		add	r0, sp, #4
  57 0014 FFF7FEFF 		bl	memset
  58              	.LVL1:
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /** Supply configuration update enable 
ARM GAS  /tmp/ccTqgYEn.s 			page 4


 114:Core/Src/main.c ****   */
 115:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
  59              		.loc 1 115 3 is_stmt 1 view .LVU6
  60 0018 0220     		movs	r0, #2
  61 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
  62              	.LVL2:
 116:Core/Src/main.c ****   /** Configure the main internal regulator output voltage 
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
  63              		.loc 1 118 3 view .LVU7
  64              	.LBB7:
  65              		.loc 1 118 3 view .LVU8
  66 001e 214B     		ldr	r3, .L7
  67 0020 0022     		movs	r2, #0
  68 0022 2149     		ldr	r1, .L7+4
  69 0024 0092     		str	r2, [sp]
  70              		.loc 1 118 3 view .LVU9
  71              		.loc 1 118 3 view .LVU10
  72              	.LBE7:
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
  73              		.loc 1 120 10 is_stmt 0 view .LVU11
  74 0026 1A46     		mov	r2, r3
  75              	.LBB8:
 118:Core/Src/main.c **** 
  76              		.loc 1 118 3 view .LVU12
  77 0028 9869     		ldr	r0, [r3, #24]
  78 002a 40F44040 		orr	r0, r0, #49152
  79 002e 9861     		str	r0, [r3, #24]
 118:Core/Src/main.c **** 
  80              		.loc 1 118 3 is_stmt 1 view .LVU13
  81 0030 9B69     		ldr	r3, [r3, #24]
  82 0032 03F44043 		and	r3, r3, #49152
  83 0036 0093     		str	r3, [sp]
 118:Core/Src/main.c **** 
  84              		.loc 1 118 3 view .LVU14
  85 0038 CB6A     		ldr	r3, [r1, #44]
  86 003a 43F00103 		orr	r3, r3, #1
  87 003e CB62     		str	r3, [r1, #44]
 118:Core/Src/main.c **** 
  88              		.loc 1 118 3 view .LVU15
  89 0040 CB6A     		ldr	r3, [r1, #44]
  90 0042 03F00103 		and	r3, r3, #1
  91 0046 0093     		str	r3, [sp]
 118:Core/Src/main.c **** 
  92              		.loc 1 118 3 view .LVU16
  93 0048 009B     		ldr	r3, [sp]
  94              	.LBE8:
 118:Core/Src/main.c **** 
  95              		.loc 1 118 3 view .LVU17
  96              		.loc 1 120 3 view .LVU18
  97              	.L2:
  98              		.loc 1 120 48 discriminator 1 view .LVU19
  99              		.loc 1 120 8 discriminator 1 view .LVU20
 100              		.loc 1 120 10 is_stmt 0 discriminator 1 view .LVU21
 101 004a 9369     		ldr	r3, [r2, #24]
 102              		.loc 1 120 8 discriminator 1 view .LVU22
ARM GAS  /tmp/ccTqgYEn.s 			page 5


 103 004c 9B04     		lsls	r3, r3, #18
 104 004e FCD5     		bpl	.L2
 121:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 105              		.loc 1 123 3 is_stmt 1 view .LVU23
 106              		.loc 1 123 36 is_stmt 0 view .LVU24
 107 0050 0122     		movs	r2, #1
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 108              		.loc 1 124 30 view .LVU25
 109 0052 4FF4A024 		mov	r4, #327680
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 110              		.loc 1 125 34 view .LVU26
 111 0056 0223     		movs	r3, #2
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 112              		.loc 1 127 30 view .LVU27
 113 0058 0521     		movs	r1, #5
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 114              		.loc 1 132 32 view .LVU28
 115 005a 0825     		movs	r5, #8
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 116              		.loc 1 123 36 view .LVU29
 117 005c 0992     		str	r2, [sp, #36]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 118              		.loc 1 124 3 is_stmt 1 view .LVU30
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 119              		.loc 1 124 30 is_stmt 0 view .LVU31
 120 005e 0A94     		str	r4, [sp, #40]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 121              		.loc 1 125 3 is_stmt 1 view .LVU32
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 122              		.loc 1 128 30 is_stmt 0 view .LVU33
 123 0060 C022     		movs	r2, #192
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 124              		.loc 1 133 35 view .LVU34
 125 0062 0024     		movs	r4, #0
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 126              		.loc 1 135 7 view .LVU35
 127 0064 09A8     		add	r0, sp, #36
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 128              		.loc 1 131 30 view .LVU36
 129 0066 1893     		str	r3, [sp, #96]
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 130              		.loc 1 141 31 view .LVU37
 131 0068 3F27     		movs	r7, #63
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
ARM GAS  /tmp/ccTqgYEn.s 			page 6


 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 132              		.loc 1 144 34 view .LVU38
 133 006a 0326     		movs	r6, #3
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 134              		.loc 1 134 34 view .LVU39
 135 006c 1B94     		str	r4, [sp, #108]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 136              		.loc 1 128 30 view .LVU40
 137 006e CDE91412 		strd	r1, r2, [sp, #80]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 138              		.loc 1 126 35 view .LVU41
 139 0072 CDE91233 		strd	r3, r3, [sp, #72]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 140              		.loc 1 127 3 is_stmt 1 view .LVU42
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 141              		.loc 1 129 3 view .LVU43
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 142              		.loc 1 130 3 view .LVU44
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 143              		.loc 1 131 3 view .LVU45
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 144              		.loc 1 132 3 view .LVU46
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 145              		.loc 1 130 30 is_stmt 0 view .LVU47
 146 0076 CDE91633 		strd	r3, r3, [sp, #88]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 147              		.loc 1 133 35 view .LVU48
 148 007a CDE91954 		strd	r5, r4, [sp, #100]
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149              		.loc 1 134 3 is_stmt 1 view .LVU49
 135:Core/Src/main.c ****   {
 150              		.loc 1 135 3 view .LVU50
 135:Core/Src/main.c ****   {
 151              		.loc 1 135 7 is_stmt 0 view .LVU51
 152 007e FFF7FEFF 		bl	HAL_RCC_OscConfig
 153              	.LVL3:
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 154              		.loc 1 141 3 is_stmt 1 view .LVU52
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 155              		.loc 1 147 36 is_stmt 0 view .LVU53
 156 0082 4023     		movs	r3, #64
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 157              		.loc 1 149 36 view .LVU54
 158 0084 4FF48062 		mov	r2, #1024
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 159              		.loc 1 152 7 view .LVU55
 160 0088 0421     		movs	r1, #4
 161 008a 01A8     		add	r0, sp, #4
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 162              		.loc 1 145 35 view .LVU56
 163 008c 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/ccTqgYEn.s 			page 7


 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 164              		.loc 1 146 35 view .LVU57
 165 008e 0495     		str	r5, [sp, #16]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 166              		.loc 1 144 34 view .LVU58
 167 0090 CDE90176 		strd	r7, r6, [sp, #4]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 168              		.loc 1 145 3 is_stmt 1 view .LVU59
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 169              		.loc 1 146 3 view .LVU60
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 170              		.loc 1 147 3 view .LVU61
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 171              		.loc 1 148 36 is_stmt 0 view .LVU62
 172 0094 CDE90533 		strd	r3, r3, [sp, #20]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 173              		.loc 1 149 3 is_stmt 1 view .LVU63
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 174              		.loc 1 149 36 is_stmt 0 view .LVU64
 175 0098 CDE90723 		strd	r2, r3, [sp, #28]
 150:Core/Src/main.c **** 
 176              		.loc 1 150 3 is_stmt 1 view .LVU65
 177              		.loc 1 152 3 view .LVU66
 178              		.loc 1 152 7 is_stmt 0 view .LVU67
 179 009c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 180              	.LVL4:
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 181              		.loc 1 156 1 view .LVU68
 182 00a0 1DB0     		add	sp, sp, #116
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 20
 185              		@ sp needed
 186 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 187              	.L8:
 188              		.align	2
 189              	.L7:
 190 00a4 00480258 		.word	1476544512
 191 00a8 00040058 		.word	1476396032
 192              		.cfi_endproc
 193              	.LFE142:
 195              		.section	.text.startup.main,"ax",%progbits
 196              		.align	1
 197              		.p2align 2,,3
 198              		.global	main
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-d16
 204              	main:
 205              	.LFB141:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 206              		.loc 1 66 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ Volatile: function does not return.
ARM GAS  /tmp/ccTqgYEn.s 			page 8


 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
  74:Core/Src/main.c **** 
 211              		.loc 1 74 3 view .LVU70
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 212              		.loc 1 66 1 is_stmt 0 view .LVU71
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 218              		.loc 1 74 3 view .LVU72
 219 0002 FFF7FEFF 		bl	HAL_Init
 220              	.LVL5:
  81:Core/Src/main.c **** 
 221              		.loc 1 81 3 is_stmt 1 view .LVU73
 222 0006 FFF7FEFF 		bl	SystemClock_Config
 223              	.LVL6:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 224              		.loc 1 88 3 view .LVU74
 225 000a FFF7FEFF 		bl	MX_GPIO_Init
 226              	.LVL7:
 227              	.L10:
  95:Core/Src/main.c ****   {
 228              		.loc 1 95 3 discriminator 1 view .LVU75
 100:Core/Src/main.c ****   /* USER CODE END 3 */
 229              		.loc 1 100 3 discriminator 1 view .LVU76
  95:Core/Src/main.c ****   {
 230              		.loc 1 95 9 discriminator 1 view .LVU77
  95:Core/Src/main.c ****   {
 231              		.loc 1 95 3 discriminator 1 view .LVU78
 100:Core/Src/main.c ****   /* USER CODE END 3 */
 232              		.loc 1 100 3 discriminator 1 view .LVU79
  95:Core/Src/main.c ****   {
 233              		.loc 1 95 9 discriminator 1 view .LVU80
 234 000e FEE7     		b	.L10
 235              		.cfi_endproc
 236              	.LFE141:
 238              		.section	.text.Error_Handler,"ax",%progbits
 239              		.align	1
 240              		.p2align 2,,3
 241              		.global	Error_Handler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv5-d16
 247              	Error_Handler:
 248              	.LFB143:
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /* USER CODE END 4 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /**
 163:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 164:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccTqgYEn.s 			page 9


 165:Core/Src/main.c ****   */
 166:Core/Src/main.c **** void Error_Handler(void)
 167:Core/Src/main.c **** {
 249              		.loc 1 167 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 168:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 169:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 172:Core/Src/main.c **** }
 254              		.loc 1 172 1 view .LVU82
 255 0000 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE143:
 259 0002 00BF     		.text
 260              	.Letext0:
 261              		.file 2 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 262              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 263              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 264              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 265              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 266              		.file 7 "/opt/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 267              		.file 8 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 268              		.file 9 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 269              		.file 10 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 270              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 271              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 272              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 273              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 274              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 275              		.file 16 "Core/Inc/gpio.h"
 276              		.file 17 "<built-in>"
ARM GAS  /tmp/ccTqgYEn.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccTqgYEn.s:17     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccTqgYEn.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccTqgYEn.s:190    .text.SystemClock_Config:00000000000000a4 $d
     /tmp/ccTqgYEn.s:196    .text.startup.main:0000000000000000 $t
     /tmp/ccTqgYEn.s:204    .text.startup.main:0000000000000000 main
     /tmp/ccTqgYEn.s:239    .text.Error_Handler:0000000000000000 $t
     /tmp/ccTqgYEn.s:247    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
